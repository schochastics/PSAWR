[{"path":"https://schochastics.github.io/PSAWR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 PSRAWR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://schochastics.github.io/PSAWR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Schoch. Author, maintainer.","code":""},{"path":"https://schochastics.github.io/PSAWR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schoch, D., (2023) PSAWR: Pushshift API Wrapper Reddit Submission Comment Search. R package version 0.1.0, <https://github.com/schochastics/PSAWR>","code":"@Manual{,   title = {PSAWR: Pushshift API Wrapper for Reddit Submission and Comment Search},   author = {David Schoch},   note = {R package version 0.1.0},   year = {2023},   url = {https://github.com/schochastics/PSAWR}, }"},{"path":"https://schochastics.github.io/PSAWR/index.html","id":"psawr-","dir":"","previous_headings":"","what":"Pushshift API Wrapper for Reddit Submission and Comment Search","title":"Pushshift API Wrapper for Reddit Submission and Comment Search","text":"PSAWR Pushsift.io API Wrapper written R comment/submission search Reddit. Reddit revoking API access pushshift (message,2023-05-02) enforced, package probably stop working","code":""},{"path":"https://schochastics.github.io/PSAWR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Pushshift API Wrapper for Reddit Submission and Comment Search","text":"can install development version PSAWR like :","code":"devtools::install_github(\"schochastics/PSAWR\")"},{"path":"https://schochastics.github.io/PSAWR/index.html","id":"search-comments","dir":"","previous_headings":"","what":"Search comments","title":"Pushshift API Wrapper for Reddit Submission and Comment Search","text":"Get last 100 comments mentioning dogs subreddit cats.","code":"search_coments(q = \"dogs\", subreddit = \"cats\", size = 100)"},{"path":"https://schochastics.github.io/PSAWR/index.html","id":"search-subreddits","dir":"","previous_headings":"","what":"Search subreddits","title":"Pushshift API Wrapper for Reddit Submission and Comment Search","text":"Get last 10 submissions mentioning cats subreddit dogs.","code":"search_submissions(q=\"cats\", subreddit = \"dogs\",size = 10)"},{"path":"https://schochastics.github.io/PSAWR/reference/ps_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Pushshift.io parameters for all endpoints — ps_params","title":"Pushshift.io parameters for all endpoints — ps_params","text":"Pushshift.io parameters endpoints","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/ps_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pushshift.io parameters for all endpoints — ps_params","text":"","code":"ps_params"},{"path":"https://schochastics.github.io/PSAWR/reference/ps_params.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pushshift.io parameters for all endpoints — ps_params","text":"tibble Endpoint Paramters","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/ps_params.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pushshift.io parameters for all endpoints — ps_params","text":"https://pushshift.io/api-parameters/","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Pushshift.io for Reddit comments — search_comments","title":"Search Pushshift.io for Reddit comments — search_comments","text":"Search Pushshift.io Reddit comments","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Pushshift.io for Reddit comments — search_comments","text":"","code":"search_comments(   q = \"\",   subreddit = NULL,   size = 25,   after = NULL,   before = NULL,   parse_date = TRUE,   verbose = TRUE,   ... )"},{"path":"https://schochastics.github.io/PSAWR/reference/search_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Pushshift.io for Reddit comments — search_comments","text":"q character, Query term subreddit Restrict results subreddit (use \"!\" negate, comma delimited multiples) size integer, Number results return integer, Restrict results made epoch time integer, Restrict results made epoch time parse_date logical, epoch time converted date? defaults TRUE verbose logical, Whether display messages ... arguments passed query parameters. See [ps_params] possible parameters.","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Pushshift.io for Reddit comments — search_comments","text":"tibble comments","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_comments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Pushshift.io for Reddit comments — search_comments","text":"Use [to_epoch] convert date epoch time","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_comments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Pushshift.io for Reddit comments — search_comments","text":"","code":"if (FALSE) { # get the last 100 comments with the word 'cats' search_comments(q = \"cats\", size = 100) }"},{"path":"https://schochastics.github.io/PSAWR/reference/search_submissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Pushshift.io for Reddit submissions — search_submissions","title":"Search Pushshift.io for Reddit submissions — search_submissions","text":"Search Pushshift.io Reddit submissions","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_submissions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Pushshift.io for Reddit submissions — search_submissions","text":"","code":"search_submissions(   q = \"\",   subreddit = NULL,   size = 25,   after = NULL,   before = NULL,   parse_date = TRUE,   verbose = TRUE,   ... )"},{"path":"https://schochastics.github.io/PSAWR/reference/search_submissions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Pushshift.io for Reddit submissions — search_submissions","text":"q character, Query term subreddit Restrict results subreddit (use \"!\" negate, comma delimited multiples) size integer, Number results return integer, Restrict results made epoch time integer, Restrict results made epoch time parse_date logical, epoch time converted date? defaults TRUE verbose logical, Whether display messages ... arguments passed query parameters. See [ps_params] possible parameters.","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_submissions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Pushshift.io for Reddit submissions — search_submissions","text":"tibble submissions","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_submissions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Pushshift.io for Reddit submissions — search_submissions","text":"Use [to_epoch] convert date epoch time","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/search_submissions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Pushshift.io for Reddit submissions — search_submissions","text":"","code":"if (FALSE) { # get the last 100 submissions with the word 'dogs' in the subreddit 'r/animals' search_submissions(q = \"dogs\", subreddit = \"animals\", size = 100) }"},{"path":"https://schochastics.github.io/PSAWR/reference/to_epoch.html","id":null,"dir":"Reference","previous_headings":"","what":"convert date to epoch time — to_epoch","title":"convert date to epoch time — to_epoch","text":"convert date epoch time","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/to_epoch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert date to epoch time — to_epoch","text":"","code":"to_epoch(date)"},{"path":"https://schochastics.github.io/PSAWR/reference/to_epoch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert date to epoch time — to_epoch","text":"date date converted","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/to_epoch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert date to epoch time — to_epoch","text":"epoch time integer","code":""},{"path":"https://schochastics.github.io/PSAWR/reference/to_epoch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert date to epoch time — to_epoch","text":"","code":"to_epoch(\"2022-12-01\") #> [1] 1669852800"},{"path":"https://schochastics.github.io/PSAWR/news/index.html","id":"psawr-010","dir":"Changelog","previous_headings":"","what":"PSAWR 0.1.0","title":"PSAWR 0.1.0","text":"CRAN release: 2023-02-28 Added NEWS.md file track changes package.","code":""}]
